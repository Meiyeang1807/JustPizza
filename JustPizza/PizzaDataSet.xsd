<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PizzaDataSet" targetNamespace="http://tempuri.org/PizzaDataSet.xsd" xmlns:mstns="http://tempuri.org/PizzaDataSet.xsd" xmlns="http://tempuri.org/PizzaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="JustPizzaDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="JustPizzaDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.JustPizza.Properties.Settings.GlobalReference.Default.JustPizzaDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PizzaTableAdapter" GeneratorDataComponentClassName="PizzaTableAdapter" Name="Pizza" UserDataComponentName="PizzaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="JustPizzaDatabaseConnectionString (Settings)" DbObjectName="dbo.Pizza" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Pizza] WHERE (([PizzaID] = @Original_PizzaID) AND ([Description] = @Original_Description) AND ([Dimension] = @Original_Dimension) AND ([Price] = @Original_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PizzaID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PizzaID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Dimension" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Dimension" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Pizza] ([PizzaID], [Description], [Dimension], [Price]) VALUES (@PizzaID, @Description, @Dimension, @Price);
SELECT PizzaID, Description, Dimension, Price FROM Pizza WHERE (PizzaID = @PizzaID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PizzaID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PizzaID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Dimension" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Dimension" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PizzaID, Description, Dimension, Price FROM dbo.Pizza</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Pizza] SET [PizzaID] = @PizzaID, [Description] = @Description, [Dimension] = @Dimension, [Price] = @Price WHERE (([PizzaID] = @Original_PizzaID) AND ([Description] = @Original_Description) AND ([Dimension] = @Original_Dimension) AND ([Price] = @Original_Price));
SELECT PizzaID, Description, Dimension, Price FROM Pizza WHERE (PizzaID = @PizzaID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PizzaID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PizzaID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Dimension" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Dimension" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PizzaID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PizzaID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Dimension" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Dimension" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PizzaID" DataSetColumn="PizzaID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Dimension" DataSetColumn="Dimension" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PizzaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="PizzaDataSet" msprop:Generator_DataSetName="PizzaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Pizza" msprop:Generator_RowEvHandlerName="PizzaRowChangeEventHandler" msprop:Generator_RowDeletedName="PizzaRowDeleted" msprop:Generator_RowDeletingName="PizzaRowDeleting" msprop:Generator_RowEvArgName="PizzaRowChangeEvent" msprop:Generator_TablePropName="Pizza" msprop:Generator_RowChangedName="PizzaRowChanged" msprop:Generator_RowChangingName="PizzaRowChanging" msprop:Generator_TableClassName="PizzaDataTable" msprop:Generator_RowClassName="PizzaRow" msprop:Generator_TableVarName="tablePizza" msprop:Generator_UserTableName="Pizza">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PizzaID" msprop:Generator_ColumnPropNameInRow="PizzaID" msprop:Generator_ColumnPropNameInTable="PizzaIDColumn" msprop:Generator_ColumnVarNameInTable="columnPizzaID" msprop:Generator_UserColumnName="PizzaID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Dimension" msprop:Generator_ColumnPropNameInRow="Dimension" msprop:Generator_ColumnPropNameInTable="DimensionColumn" msprop:Generator_ColumnVarNameInTable="columnDimension" msprop:Generator_UserColumnName="Dimension" type="xs:int" />
              <xs:element name="Price" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_UserColumnName="Price" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Pizza" />
      <xs:field xpath="mstns:PizzaID" />
    </xs:unique>
  </xs:element>
</xs:schema>